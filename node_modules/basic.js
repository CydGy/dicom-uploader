var http = require('http');


exports.redirect_back = function (req, res) {

  // 303 See Other
  res.writeHead(303, { "Location": req.headers.referer });
  res.end();

};


exports.reserr = function (res, err, statusCode, message) {

  if (!statusCode) statusCode = 500;

  var body = statusCode + ' ' + http.STATUS_CODES[statusCode]
    + (message && '\n\n' + message || '');

  res.writeHead(statusCode, {"Content-Type": 'text/plain; charset=UTF-8'});
  res.end(body);

  if (err && statusCode === 500)
    console.error(err.stack);

};


exports.regNoCase = function (str) {

  return { $regex: new RegExp('^' + str + '$', 'i') };

};


/**
 * Random
 */

exports.getRandomInt = function (min, max) {

  return Math.floor(Math.random() * (max - min + 1)) + min;

};


exports.getRandomCode = function (length) {
	
	var code = '';
	var string = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'
		, stringLength = string.length;
		
	for (var i = 0, rNum; i < length; i++) {
		rNum = Math.floor( Math.random() * stringLength );
		code += string.substring(rNum, rNum + 1);
	}
	
	return code;
	
};


exports.getPhotoPath = function (_id) {

  var id = _id.toHexString();

  var dir1 = id.slice(-1) + '/'
    , dir2 = id.slice(-2, -1) + '/'
    , dir3 = id + '/';

  return dir1 + dir2 + dir3;

};
